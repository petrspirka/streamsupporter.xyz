@page
@using NewStreamSupporter.Data;
@using NewStreamSupporter.Helpers;
@model NewStreamSupporter.Areas.Dashboard.Pages.Rewards.EditModel

<h1>Edit reward</h1>

<hr />
<div class="row mx-0">
    <div class="col-lg-6 col-md-8 offset-lg-3 offset-md-2">
        <form method="post">
            <input type="hidden" asp-for="RewardModel.Id" />
            <input type="hidden" asp-for="RewardModel.OwnerId" />
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="RewardModel.Id" />
            <div class="form-group pb-2">
                <label asp-for="RewardModel.Name" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<RewardModel>(nameof(RewardModel.Name)))"></label>
                <input asp-for="RewardModel.Name" class="form-control" />
                <span asp-validation-for="RewardModel.Name" class="text-danger"></span>
            </div>
            <div class="form-group pb-2">
                <label asp-for="RewardModel.Text" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<RewardModel>(nameof(RewardModel.Text)))"></label>
                <input asp-for="RewardModel.Text" class="form-control" />
                <span asp-validation-for="RewardModel.Text" class="text-danger"></span>
            </div>
            <div class="form-group pb-2">
                <label asp-for="RewardModel.Cost" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<RewardModel>(nameof(RewardModel.Cost)))"></label>
                <input asp-for="RewardModel.Cost" class="form-control" type="number" min="@(ModelExtensions.GetMinimum<RewardModel>(nameof(RewardModel.Cost)))" max="@(ModelExtensions.GetMaximum<RewardModel>(nameof(RewardModel.Cost)))" />
                <span asp-validation-for="RewardModel.Cost" class="text-danger"></span>
            </div>
            <div class="form-group form-check pb-2">
                <label class="form-check-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<RewardModel>(nameof(RewardModel.HasTextField)))">
                    <input class="form-check-input" asp-for="RewardModel.HasTextField" /> @Html.DisplayNameFor(model => model.RewardModel.HasTextField)
                </label>
            </div>
            <div class="form-group form-check pb-2">
                <label class="form-check-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<RewardModel>(nameof(RewardModel.AutoAccept)))">
                    <input class="form-check-input" asp-for="RewardModel.AutoAccept" /> @Html.DisplayNameFor(model => model.RewardModel.AutoAccept)
                </label>
            </div>
            <div class="form-group pb-2">
                <label asp-for="RewardModel.TriggeredId" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<RewardModel>(nameof(RewardModel.TriggeredId)))"></label>
                <select class="form-control" name="chosenElement">
                    <option value="">Select an option</option>
                    @foreach(var option in Model.UserOptions)
                    {
                        @if (Model.RewardModel.TriggeredId != option.Item2)
                        {
                            <option value="@(option.Item1):@(option.Item2)">@option.Item1 - @option.Item3</option>
                        }
                        else
                        {
                            <option selected="@(option.Item1):@(option.Item2)" value="@(option.Item1):@(option.Item2)">@option.Item1 - @option.Item3</option>
                        }
                    }
                </select>
                <span asp-validation-for="RewardModel.TriggeredId" class="text-danger"></span>
            </div>
            <div class="form-group pb-2">
                <label asp-for="RewardModel.BackgroundColor" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<RewardModel>(nameof(RewardModel.BackgroundColor)))"></label>
                <br />
                <input class="form-control js-color" asp-for="RewardModel.BackgroundColor" data-jscolor="{preset: 'ThemedPreset'}" />
                <span asp-validation-for="RewardModel.BackgroundColor" class="text-danger"></span>
            </div>
            <div class="form-group pb-2">
                <label asp-for="RewardModel.FontColor" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<RewardModel>(nameof(RewardModel.FontColor)))"></label>
                <br />
                <input class="form-control js-color" asp-for="RewardModel.FontColor" data-jscolor="{preset: 'ThemedPreset'}" />
                <span asp-validation-for="RewardModel.FontColor" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary mb-1" />
                <a class="btn btn-danger mb-1" asp-page="./Index">Cancel</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
