@page
@using NewStreamSupporter.Contracts;
@using NewStreamSupporter.Data;
@using NewStreamSupporter.Helpers;
@model NewStreamSupporter.Areas.Dashboard.Pages.Alert.AlertPageModel

@inject IFileStore fileStore;

@{
    ViewData["SubArea"] = "Alert";
}

<h1>Edit alert</h1>

<div class="border border-top my-2"></div>
<div class="row mx-0">
    <div class="col-lg-6 col-md-8 offset-lg-3 offset-md-2">
        <form method="post" enctype="multipart/form-data">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="AlertModel.Id" />
            <input type="hidden" asp-for="AlertModel.OwnerId" value="@Model.AlertModel.OwnerId" />
            <input type="hidden" asp-for="AlertModel.AudioType" value="@Model.AlertModel.AudioType" />
            <div class="form-group form-check pb-2">
                <label class="form-check-label" asp-for="AlertModel.ShouldTriggerFollows" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<AlertModel>(nameof(AlertModel.ShouldTriggerFollows)))">
                    <input class="form-check-input" asp-for="AlertModel.ShouldTriggerFollows" /> @Html.DisplayNameFor(model => model.AlertModel.ShouldTriggerFollows)
                </label>
            </div>
            <div class="form-group form-check pb-2">
                <label class="form-check-label" asp-for="AlertModel.ShouldTriggerDonations" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<AlertModel>(nameof(AlertModel.ShouldTriggerDonations)))">
                    <input class="form-check-input" asp-for="AlertModel.ShouldTriggerDonations" /> @Html.DisplayNameFor(model => model.AlertModel.ShouldTriggerDonations)
                </label>
            </div>
            <div class="form-group pb-2">
                <label asp-for="AlertModel.BackgroundColor" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<AlertModel>(nameof(AlertModel.BackgroundColor)))"></label>
                <br />
                <input class="form-control js-color" asp-for="AlertModel.BackgroundColor" data-jscolor="{preset: 'ThemedPreset'}" />
                <span asp-validation-for="AlertModel.BackgroundColor" class="text-danger"></span>
            </div>
            <div class="form-group pb-2">
                <label asp-for="AlertModel.FontColor" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<AlertModel>(nameof(AlertModel.FontColor)))"></label>
                <br />
                <input class="form-control js-color" asp-for="AlertModel.FontColor" data-jscolor="{preset: 'ThemedPreset'}" />
                <span asp-validation-for="AlertModel.FontColor" class="text-danger"></span>
            </div>
            <div class="form-group pb-2">
                <label asp-for="AlertModel.AlertDuration" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<AlertModel>(nameof(AlertModel.AlertDuration)))"></label>
                <input asp-for="AlertModel.AlertDuration" type="number" class="form-control" min="@(ModelExtensions.GetMinimum<AlertModel>(nameof(AlertModel.AlertDuration)))" max="@(ModelExtensions.GetMaximum<AlertModel>(nameof(AlertModel.AlertDuration)))" />
                <span asp-validation-for="AlertModel.AlertDuration" class="text-danger"></span>
            </div>
            <div class="form-group pb-2">
                <label for="AlertModel_CustomAudio" class="control-label">Choose custom audio</label>
                @if (await fileStore.Exists(HttpContext.GetUserId()))
                {
                    <br />
                    <button id="AlertModel_CustomAudio" class="btn btn-danger mt-1" asp-page-handler="ClearFile">Clear custom audio</button>
                }
                else
                {
                    <input id="AlertModel_CustomAudio" type="file" name="AlertModel.CustomAudio" accept=".mp3,.wav" class="form-control">
                }
                <span class="text-danger">@Model.FileStatusMessage</span>
            </div>
            <div class="form-group pt-2 pb-2">
                <input type="submit" value="Save" asp-page-handler="" class="btn btn-primary mb-1" />
                <button asp-page-handler="TestTrigger" class="btn btn-primary mb-1" data-bs-toggle="tooltip" title="Test this widget. Keep in mind you must first save if you've modified the alert.">Test alert</button>
                <a asp-area="Api" asp-controller="Component" asp-action="Alert" asp-route-uid="@Model.AlertModel.OwnerId" asp-route-id="@Model.AlertModel.Id" class="btn btn-primary mb-1" target="_blank">Show</a>
                <a asp-page="./Index" class="btn btn-danger mb-1">Back to overview</a>
            </div>
        </form>
    </div>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
