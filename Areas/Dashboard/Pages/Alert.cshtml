@page
@using NewStreamSupporter.Contracts;
@using NewStreamSupporter.Data;
@using NewStreamSupporter.Helpers;
@model NewStreamSupporter.Areas.Dashboard.Pages.Alert.AlertPageModel
@using Microsoft.AspNetCore.Antiforgery;
@inject IAntiforgery antiforgery;
@{
    var tokenStore = antiforgery.GetAndStoreTokens(HttpContext);
    var afToken = tokenStore.RequestToken;
}

@inject IFileStore fileStore;

@{
    ViewData["SubArea"] = "Alert";
}

<h1>Edit alert</h1>

<div class="border border-top my-2"></div>
<div class="row mx-0">
    <div class="col-lg-6 col-md-8 offset-lg-3 offset-md-2">
        <form method="post" enctype="multipart/form-data" id="mainForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="AlertModel.Id" />
            <input type="hidden" asp-for="AlertModel.OwnerId" value="@Model.AlertModel.OwnerId" />
            <input type="hidden" asp-for="AlertModel.AudioType" value="@Model.AlertModel.AudioType" />
            <div class="form-group pb-2">
                <label asp-for="AlertModel.AlertDuration" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<AlertModel>(nameof(AlertModel.AlertDuration)))"></label>
                <input asp-for="AlertModel.AlertDuration" required type="number" step="0.05" class="form-control" min="@(ModelExtensions.GetMinimum<AlertModel>(nameof(AlertModel.AlertDuration)))" max="@(ModelExtensions.GetMaximum<AlertModel>(nameof(AlertModel.AlertDuration)))" />
                <span asp-validation-for="AlertModel.AlertDuration" class="text-danger"></span>
            </div>
            <div class="form-group pb-2">
                <label for="AlertModel_CustomAudio" class="control-label" data-bs-toggle="tooltip" title="Lets you upload a custom audio sound to be used. Must be .mp3 or .wav. Maximum file size is 2MB.">Choose custom audio</label>
                @if (await fileStore.Exists(HttpContext.GetUserId()))
                {
                    <br />
                    <button id="AlertModel_CustomAudio" class="btn btn-danger mt-1" asp-page-handler="ClearFile">Clear custom audio</button>
                }
                else
                {
                    <input id="AlertModel_CustomAudio" type="file" name="AlertModel.CustomAudio" accept=".mp3,.wav" class="form-control">
                    <span id="AlertModel_CustomAudio_Status" class="text-danger"></span>
                    <script>
                        $("#AlertModel_CustomAudio").bind("change", function () {
                            if (this.files.length < 1) {
                                return;
                            }
                            else if (this.files.length > 1) {
                                $("#AlertModel_CustomAudio_Status").text("Only one file is allowed");
                                $("#SubmitFormInput").prop("disabled", true);
                                return;
                            }
                            const fileDup = this.files[0];
                            const ext = fileDup.name.split(".").pop();
                            console.log(ext);
                            if (this.files[0].size > @Model.MaxFileSize) {
                                $("#AlertModel_CustomAudio_Status").text("The specified file is too big");
                                $("#SubmitFormInput").prop("disabled", true);
                            }
                            else if (ext != "mp3" && ext != "wav") {
                                $("#AlertModel_CustomAudio_Status").text("The specified file contains an invalid extension");
                                $("#SubmitFormInput").prop("disabled", true);
                            }
                            else {
                                $("#AlertModel_CustomAudio_Status").text("");
                                $("#SubmitFormInput").prop("disabled", false);
                            }

                        })
                    </script>
                }
                <span id="AlertModel_CustomAudio_Status" class="text-danger">@Model.FileStatusMessage</span>
            </div>
            <div class="form-group pb-2">
                <label asp-for="AlertModel.BackgroundColor" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<AlertModel>(nameof(AlertModel.BackgroundColor)))"></label>
                <br />
                <input class="form-control js-color" required asp-for="AlertModel.BackgroundColor" data-jscolor="{preset: 'ThemedPreset'}" />
                <span asp-validation-for="AlertModel.BackgroundColor" class="text-danger"></span>
            </div>
            <div class="form-group pb-2">
                <label asp-for="AlertModel.FontColor" class="control-label" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<AlertModel>(nameof(AlertModel.FontColor)))"></label>
                <br />
                <input class="form-control js-color" required asp-for="AlertModel.FontColor" data-jscolor="{preset: 'ThemedPreset'}" />
                <span asp-validation-for="AlertModel.FontColor" class="text-danger"></span>
            </div>
            <div class="form-group form-check pb-2">
                <label class="form-check-label" asp-for="AlertModel.ShouldTriggerFollows" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<AlertModel>(nameof(AlertModel.ShouldTriggerFollows)))">
                    <input class="form-check-input" asp-for="AlertModel.ShouldTriggerFollows" /> @Html.DisplayNameFor(model => model.AlertModel.ShouldTriggerFollows)
                </label>
            </div>
            <div class="form-group form-check pb-2">
                <label class="form-check-label" asp-for="AlertModel.ShouldTriggerDonations" data-bs-toggle="tooltip" data-bs-title="@(ModelExtensions.GetDescription<AlertModel>(nameof(AlertModel.ShouldTriggerDonations)))">
                    <input class="form-check-input" asp-for="AlertModel.ShouldTriggerDonations" /> @Html.DisplayNameFor(model => model.AlertModel.ShouldTriggerDonations)
                </label>
            </div>
            <div class="form-group pt-2 pb-2">
                <input type="submit" value="Save" asp-page-handler="" class="btn btn-primary mb-1" id="SubmitFormInput" />
                <a href="#" onclick="TestWidget('@Model.AlertModel.Id', '@afToken')" class="btn btn-primary mb-1" data-bs-toggle="tooltip" title="Test this widget. Keep in mind you must first save if you've modified the alert.">Test alert</a>
                <a asp-area="Api" asp-controller="Component" asp-action="Alert" asp-route-uid="@Model.AlertModel.OwnerId" asp-route-id="@Model.AlertModel.Id" class="btn btn-primary mb-1" target="_blank">Show</a>
                <a asp-page="./Index" class="btn btn-danger mb-1">Back to overview</a>
            </div>
        </form>
    </div>
</div>
<script>
    // https://stackoverflow.com/questions/7317273/warn-user-before-leaving-web-page-with-unsaved-changes/21061193#21061193
    let isSubmitting = false;
    $('#mainForm').on("submit", function () {
        const valid = $(this)[0].checkValidity();
        console.log("Valid: " + valid);
        if (valid) {
            isSubmitting = true;
        }
    });

    $('#mainForm').data('serialize', $('#mainForm').serialize());
    $(window).bind('beforeunload', function (e) {
        if ($('#mainForm').serialize() != $('#mainForm').data('serialize') && !isSubmitting) {
            return true;
        }
        e = null; // i.e; if form state change show warning box, else don't show it.
    });
</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
